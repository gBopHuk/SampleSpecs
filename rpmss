#!/bin/bash

SPECSPATH=./Templates
PWD=$(pwd)
PWDBASENAME=$(basename $PWD)
VERBOSE=0

function showdoc()
{
	echo -e "rpmss is a RPM Sample Specs tool. Creates a sample of rpm-spec file in current directory\n"
    echo -e "\$rpmss [options] [args] "
	echo -e "options:"
	echo -e "  -i\t\t-- interactive mode"
	echo -e "  -l|--list\t-- list of available specs"
	echo -e "  -t\t\t-- type of  spec sample. See --list"
	echo -e "  -o\t\t-- output name of rpm-spec file. Default name is basename of \$(pwd)"
	echo -e "  -v\t\t-- verbose mode on"
	echo -e "  -h|--help\t-- show this message"
	echo -e "args:"
	echo -e "  -t name\t-- name of spec sample. See --list"
	echo -e "  -o name\t-- name of created rpm-spec file.\n"
	echo -e "examples:"
	echo -e "  \$ rpmss "
	echo -e "  Simple spec is choosed" 
	echo -e "  /home/user/package/pack.spec has create\n"
	echo -e "  \$ rpmss -t cmake -o pack"
	echo -e "  You choosed a cmake spec" 
	echo -e "  /home/user/package/pack.spec has create\n"
	echo -e "  \$ ./rpmss -i -o slib "
	echo -e "  Please, enter the Name of Spec type: "
	echo -e "  lib "
	echo -e "  You choosed a lib "
	echo -e "  /home/user/package/slib.spec has create "
}

function is_spec_exist()
{
  if [ -f "$SPECSPATH/$spectempl.spec" ];
	  then echo " You choosed a $spectempl "
	  else echo " $spectempl doesn't exist"
		   exit 1
  fi
}

function interactive()
{
  echo " Please, enter the Name of Spec type: "
  read -p "Type of spec: " spectempl
}

function specs_list()
{
  if [ -d $SPECSPATH ];
	  then ls $SPECSPATH | sed 's%\.spec%%'
	  else echo " SPECSPATH doesn't exist "
		   exit 1
  fi
}

function get_from_list()
{
  [ $VERBOSE == 1 ] && echo "TRACE: get_from_list() input: \$1=$1" 

  #check zero line
  [ -z $1 ] && return 1

  #check alrady exist spec
  no_spec_in_pwd $PWDBASENAME 
  [ $? == 1 ] && exit 1

  #get list of specs
  if [ -d $SPECSPATH ];
	  then specslist=$(ls $SPECSPATH | sed 's%\.spec%%')
	  else echo " SPECSPATH doesn't xist "
		   exit 1
  fi
  
  #find the spec and copy to pwd
  for i in $specslist; do
	if [ "$i" == "$1" ]; then
	  copying_spec "$i" "$PWDBASENAME" && return 0 || return 1
	fi
  done
}

function copying_spec()
{
  [ $VERBOSE == 1 ] && echo "TRACE: copying_spec() input: \$1=$1, \$2=$2" 

  #check input values
  if [ -z $1 ] || [ -z $2 ]; then  return 1; fi

  #check already exist spec
  no_spec_in_pwd $2
  local retval=$? 

  #if no exist specs then copy $1.spec
  [ $retval == 0 ] && { cp $SPECSPATH/$1.spec $PWD/$2.spec && echo "$PWD/$2.spec has create"; return 0; }
  [ $retval == 1 ] && return 1
}

function no_spec_in_pwd()
{
  [ $VERBOSE == 1 ] && echo "TRACE: no_spec_in_pwd() input: \$1=$1" 

  if [ -f "$PWD/$1.spec" ];  then
	echo "$PWD/$1.spec already exist."
	return 1
  else
	return 0
  fi
}

#main loop

while getopts ":t::o::v" opt; do
  case $opt in
	t)
	  spectempl=$OPTARG
	  is_spec_exist
	  ;;
	o)
	  PWDBASENAME=$OPTARG
	  ;;
	v)
	  VERBOSE=1
	  ;;
  esac
done 

case "$1" in
	-i)
	    specs_list
		interactive
		is_spec_exist
		copying_spec "$spectempl" "$PWDBASENAME"
		;;
	-l|--list)
		specs_list	
		;;
	-h|--help)
		showdoc	
		;;
	*)
	    get_from_list "$spectempl" ||\
		{ echo -e "Simple spec is choosed" && copying_spec "simple" "$PWDBASENAME"; }
esac

exit 0
